set cut_paste_input [stack 0]
push $cut_paste_input
Dot {
 name Dot13
 selected true
 xpos 324
 ypos -516
}
set N60c92c00 [stack 0]
push $N60c92c00
add_layer {BumpNormals BumpNormals.red BumpNormals.green BumpNormals.blue BumpNormals.alpha}
Shuffle {
 in BumpNormals
 name Shuffle2
 selected true
 xpos 400
 ypos -520
}
Group {
 inputs 2
 name Mask3D_RS1
 tile_color 0x417c3eff
 selected true
 xpos 400
 ypos -400
 addUserKnob {20 User}
 addUserKnob {18 pos l Position t "Select the colour that corresponds to the position you want."}
 pos {0.1597469896 -0.1521629989 0.3190000057}
 addUserKnob {6 pos_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {13 rad l Radius}
 rad {4.6 3.2 12.6}
 addUserKnob {7 fall l "Falloff Exponent" R 1 10}
 fall 7.65
 addUserKnob {7 gain l Hardness}
 gain 0.905
}
 Input {
  inputs 0
  name alpha
  selected true
  xpos -34
  ypos 535
  number 1
 }
 Input {
  inputs 0
  name normals
  selected true
  xpos 95
  ypos 502
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  selected true
  xpos 101
  ypos 530
 }
 Expression {
  temp_name0 distR
  temp_expr0 (Br-parent.pos.r)/rad.x
  temp_name1 distG
  temp_expr1 (Bg-parent.pos.g)/rad.y
  temp_name2 distB
  temp_expr2 (Bb-parent.pos.b)/rad.z
  temp_name3 len
  temp_expr3 sqrt((distR*distR)+(distG*distG)+(distB*distB))
  expr0 pow(1-len,fall)
  expr1 pow(1-len,fall)
  expr2 pow(1-len,fall)
  expr3 pow(1-len,fall)
  maskChannelInput rgba.alpha
  name __POSITION_KEY__
  selected true
  xpos 95
  ypos 578
 }
 Clamp {
  channels rgba
  name Clamp1
  selected true
  xpos 95
  ypos 612
 }
 Group {
  name Perlin_gain
  help "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."
  tile_color 0xcc9d6d00
  selected true
  xpos 95
  ypos 669
  addUserKnob {20 "" l User}
  addUserKnob {7 realGain l "Perlin Gain function" t "This is an implementation of Ken Perlin's gain function. It boosts micro-contrast (acutance, in photographic terms) without clipping. When set to 0.5, it has no effect. When >0.5, gain is boosted; when <.5, gain is muted. Only luminance is affected; not hue nor saturation. Superwhites remain untouched."}
  realGain {{parent.gain i x23 0.69}}
 }
  Input {
   inputs 0
   name Input1
   selected true
   xpos 130
   ypos -89
  }
  Expression {
   temp_name0 gain
   temp_expr0 parent.realGain
   temp_name1 lum
   temp_expr1 "0.2125*Br + 0.7154*Bg + 0.0721*Bb"
   temp_name2 val
   temp_expr2 .5*((lum<.5)?((1-gain)>0?pow(2*lum,log(1-gain)/log(0.5)):0):2-((1-gain)>0?pow(2-2*lum,log(1-gain)/log(0.5)):0))
   expr0 r>1?r:r*(val/(lum+0.00001))
   expr1 g>1?g:g*(val/(lum+0.00001))
   expr2 b>1?b:b*(val/(lum+0.00001))
   name KPGain
   tile_color 0xd47f3b00
   label "TRUE GAIN\nFUNCTION"
   xpos 130
   ypos -24
   addUserKnob {20 "" l User}
  }
  Output {
   name Output1
   xpos 130
   ypos 98
  }
 end_group
 Clamp {
  channels rgba
  name Clamp2
  selected true
  xpos 95
  ypos 762
 }
set N63808c00 [stack 0]
 Output {
  name Output1
  selected true
  xpos 95
  ypos 839
 }
push $N63808c00
 Viewer {
  name Viewer1
  selected true
  xpos -78
  ypos 627
 }
end_group
push $N60c92c00
Grade {
 inputs 1+1
 whitepoint 1.5
 maskChannelMask rgba.red
 name Grade3
 selected true
 xpos 290
 ypos -400
}
