import nuke
def nodePresetsStartup():
  nuke.setUserPreset("AddChannels", "depth", {'channels': 'depth', 'color': '1', 'selected': 'true'})
  nuke.setUserPreset("Camera2", "Camera_3DEnv_1", {'suppress_dialog': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'label': '[knob this.xpos 0]\n[knob this.ypos 0]\n[knob this.name Camera_3DEnv_1]', 'read_from_file': 'true', 'frame_rate': '25'})
  nuke.setUserPreset("ChannelMerge", "depth.z", {'A': 'depth.Z', 'output': 'depth.Z', 'operation': 'min', 'B': 'depth.Z', 'selected': 'true'})
  nuke.setUserPreset("Clamp", "motion", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'maximum': '{width} {height} {maximum.r} {maximum.g}', 'channels': 'motion', 'minimum': '{-maximum} {-maximum} {-maximum} {-maximum}', 'indicators': '2', 'gl_color': '0xc5ff3200'})
  nuke.setUserPreset("ColorCorrect", "color_only", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'label': '\xe9\xa2\x9c\xe8\x89\xb2\xe8\xb0\x83\xe6\x95\xb4', 'mix_luminance': '1', 'indicators': '8', 'gl_color': '0x6c32ff00'})
  nuke.setUserPreset("ColorCorrect", "lumiance_only", {'gl_color': '0xffc83200', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'label': '\xe4\xba\xae\xe5\xba\xa6\xe8\xb0\x83\xe6\x95\xb4'})
  nuke.setUserPreset("ColorCorrect", "SSS.alpha", {'indicators': '4', 'gl_color': '0x8cff3200', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'maskChannelInput': 'SSS.alpha'})
  nuke.setUserPreset("ColorCorrect", "shadow -> blue", {'shadows.gain_panelDropped': 'true', 'shadows.gain': '0.65705 0.920283 1 1', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'shadows.saturation': '0.76', 'lookup': 'shadow {curve 1 s0 x0.1980786026 0 s0}\nmidtone {1-shadow-highlight}\nhighlight {}', 'gl_color': '0x32fdff00'})
  nuke.setUserPreset("ColorCorrect", "far", {'contrast_panelDropped': 'true', 'gamma_panelDropped': 'true', 'selected': 'true', 'label': '\xe8\xbf\x9c\xe5\xa4\x84', 'contrast': '0.75 0.6 0.45 0.6', 'gl_color': '0x32ff5d00', 'gamma': '0.94 0.95 0.96 1'})
  nuke.setUserPreset("ColorCorrect", "car_white", {'midtones.saturation': '0.39', 'selected': 'true', 'shadows.offset': '0.09', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'highlights.saturation': '0', 'midtones.gamma': '1.75', 'maskChannelInput': 'mask_extra.car_white', 'highlights.gain': '0', 'midtones.gain': '3.45', 'highlights.gamma': '5', 'shadows.gamma': '0.2', 'highlights.contrast': '0', 'lookup': 'shadow {}\nmidtone {}\nhighlight {curve x0.1962686479 0 s0 x1 1 s0}', 'gain': '0.8497499824 0.9205625057 1.029999971 0.8799999952', 'offset': '0.3', 'indicators': '4', 'gl_color': '0xff327400', 'highlights.offset': '1'})
  nuke.setUserPreset("ColorLookup", "softclip", {'channels': 'rgb', 'selected': 'true', 'lut': 'master {curve C 0 x0.5114582777 0.5114582777 x1.17865777 0.874594511 k x2.760980606 1 s0}\nred {}\ngreen {}\nblue {}\nalpha {}', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91'})
  nuke.setUserPreset("Copy", "depth.Z", {'to0': 'depth.Z', 'selected': 'true', 'from0': 'depth.Z'})
  nuke.setUserPreset("Copy", "rgb", {'selected': 'true', 'from1': 'rgba.green', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'from0': 'rgba.red', 'from2': 'rgba.blue'})
  nuke.setUserPreset("Crop", "root.format", {'box': '0 0 {root.format.w} {root.format.h}', 'indicators': '2', 'reformat': 'true', 'selected': 'true', 'crop': 'false'})
  nuke.setUserPreset("Dilate", "Depth", {'channels': 'depth', 'selected': 'true', 'size': '-1'})
  nuke.setUserPreset("Expression", "Depth:NukeToRedshift", {'expr0': '(z==0)?99999:1/z*0.0001', 'channel0': 'depth', 'selected': 'true', 'label': 'Depth:NukeToRedshift'})
  nuke.setUserPreset("Expression", "Depth:RedshiftToNuke", {'expr0': '(z==0)?0:1/(z*10000)', 'channel0': 'depth', 'selected': 'true', 'label': 'Depth:RedshiftToNuke'})
  nuke.setUserPreset("Expression", "PuzzlMatte + ", {'expr0': 'PuzzleMatte.red + PuzzleMatte.green + PuzzleMatte.blue + PuzzleMatte1.red + PuzzleMatte1.green', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'channel0': 'rgba'})
  nuke.setUserPreset("Expression", "P_rotation", {'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'temp_name2': 'Py', 'temp_name3': 'Pz', 'temp_name0': 'rotation', 'temp_name1': 'Px', 'channel1': '-P.red P.green -P.blue', 'expr2': 'cos(rotation) * Pz + sin(rotation) * Px', 'channel2': '-P.red -P.green P.blue', 'expr0': 'cos(rotation) * Px - sin(rotation) * Pz', 'channel0': 'P.red -P.green -P.blue', 'gl_color': '0x32ff9a00', 'temp_expr2': 'P.green', 'temp_expr3': 'P.blue', 'temp_expr0': 'radians(this.rotation)', 'temp_expr1': 'P.red', 'rotation': '75'})
  nuke.setUserPreset("Expression", "P clean", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'channel1': '-P.red P.green -P.blue -P.X', 'expr2': '(a == 1)? P.blue: 0', 'channel2': '-P.red -P.green P.blue -P.X', 'expr0': '(a == 1)? P.red: 0', 'expr1': '(a == 1)? P.green: 0', 'gl_color': '0xae32ff00', 'channel0': 'P.red -P.green -P.blue none'})
  nuke.setUserPreset("Glow2", "A", {'indicators': '16', 'mix': '0.25', 'saturation': '0.5', 'selected': 'true', 'size': '5'})
  nuke.setUserPreset("Glow2", "EffectOnly", {'effect_only': 'true', 'selected': 'true', 'tolerance': '0.195', 'brightness': '1.66'})
  nuke.setUserPreset("Glow2", "highlight", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'brightness': '0.42', 'selected': 'true', 'mix': '0.5', 'indicators': '16', 'tolerance': '0.9', 'size': '76'})
  nuke.setUserPreset("Glow2", "bluesky", {'tint': '0.03877073526 0.593685925 1 1', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'mix': '0.2', 'indicators': '16', 'tolerance': '0.465', 'size': '35'})
  nuke.setUserPreset("Group15052241136777928917", "MT", {'Child-1 indicators': '2', 'Child-1 gl_color': '0xff423200', 'Child-1 label': '[value amplitude] px at [value frequency]', 'Child0 selected': 'true', 'Child-1 scale': '1.015', 'Child-1 selected': 'true', 'Child2 selected': 'true', 'Child-1 rotation': '0.1', 'Child2 motionblur': '0', 'Child2 gl_color': '0xff773200', 'Child1 selected': 'true', 'Child-1 scaling': '0.001', 'Child-1 amplitude': '22 15', 'Child2 center': '{parent.cs_center} {parent.cs_center}', 'Child-1 cs_center': '{"\\[value input.width 0]/2"} {"\\[value input.height 0]/2"}', 'Child2 scale': '{(fBm((seed+frame)*frequency,30.5,31.5,octaves,2,.5)*parent.scaling+parent.scale)}', 'Child1 gl_color': '0x8c32ff00', 'Child-1 note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'Child0 gl_color': '0x32ffda00', 'Child-1 frequency': '0.01', 'Child-1 help': 'Add random camera shake, including motion blur.', 'Child2 translate': '{fBm((seed+frame)*frequency,2.5,3.5,octaves,2,.5)*amplitude.w} {fBm((seed+frame)*frequency+100,10.5,11.5,octaves,2,.5)*amplitude.h}', 'Child2 rotate': '{fBm((seed+frame)*frequency,20.5,21.5,octaves,2,.5)*parent.rotation}'})
  nuke.setUserPreset("HSVTool", "a", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'brightness': '0.04', 'brtrolloffrange': '0.01', 'selected': 'true', 'output': '-rgba.alpha', 'brtsrcs': '0 0.08'})
  nuke.setUserPreset("HueCorrect", "Lower Blue Lum", {'hue': 'sat {}\nlum {curve 0.5348259211 s0 t-0.01999999955 0.8522388935 1 0.9726368189 0.8467662334 0.6935323716 0.5348259211 s-0.03624998778}\nred {}\ngreen {}\nblue {}\nr_sup {}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'selected': 'true'})
  nuke.setUserPreset("HueCorrect", "SNJYW_EP05_01_a", {'hue': 'sat {curve 1.262686491 s0 t0.03557211161 0.7920398712 1 0.9562189579 1.218905449 0.9671641588 1.262686491}\nlum {}\nred {}\ngreen {}\nblue {}\nr_sup {}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91'})
  nuke.setUserPreset("HueCorrect", "fix face_blue", {'hue': 'sat {}\nlum {}\nred {curve 1.519900441 s0 t0.009577274323 1.388557196 1 0.9945273399 1.383084536 1.48159194 1.519900441}\ngreen {curve 1.153233767 1.103980064 1 1 1.076616883 1.169651747 1.153233767 s-0.0177859664 t0}\nblue {}\nr_sup {curve 1 0.6442786455 1 1 1 1 1}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'maskChannelInput': 'SSS.alpha', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'indicators': '4', 'gl_color': '0xf3ff3200'})
  nuke.setUserPreset("HueCorrect", "stress cold", {'hue': 'sat {curve 1 1 1 1 1 1.333830833 1}\nlum {}\nred {}\ngreen {}\nblue {}\nr_sup {}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'gl_color': '0xf332ff00'})
  nuke.setUserPreset("HueCorrect", "stress red", {'hue': 'sat {curve 1 1.24626863 1 1 1 1 1}\nlum {}\nred {}\ngreen {}\nblue {}\nr_sup {}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'gl_color': '0x327eff00'})
  nuke.setUserPreset("HueCorrect", "twilight", {'hue': 'sat {curve 0.5348259211 1.569154263 1 1.437810898 1 0.7154228687 0.5348259211 s1.535074592 t0}\nlum {curve 1 1 1 1 1 0.5184080601 1}\nred {}\ngreen {}\nblue {}\nr_sup {}\ng_sup {}\nb_sup {}\nsat_thrsh {}', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'gl_color': '0x324cff00'})
  nuke.setUserPreset("HueKeyer", "Yellow_in", {'invert': 'false', 'selected': 'true', 'lut': 'amount {curve x0.811249733 0 x1.066457629 0 x1.321665525 0 x1.576873183 1 x1.832081079 1 x2.087288618 0 x2.342496395 0 s0}\nsat_thrsh {curve x0.811249733 0.1 x1.066457629 0.1 x1.321665525 0.1 x1.576873183 0.1 x1.832081079 0.1 x2.087288618 0.1 x2.342496395 0.1 s0}'})
  nuke.setUserPreset("Keyer", "depth", {'input': 'depth', 'operation': 'red keyer', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91'})
  nuke.setUserPreset("Keyer", "ZDefocus_direct", {'invert': 'true', 'selected': 'true', 'label': '[value input]', 'range': '0 0.002045402894 0.002045402894 0.00944842', 'output': 'BG_A.ZDefocus', 'input': 'depth', 'operation': 'luminance key'})
  nuke.setUserPreset("Keyer", "depth -> mask", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'invert': 'true', 'selected': 'true', 'label': '\xe8\xbe\x93\xe5\x85\xa5\xe9\x80\x9a\xe9\x81\x93 :[value input]', 'range': '0.001420418676 0.004602156511 1 1', 'output': 'mask.a', 'input': 'depth', 'operation': 'luminance key'})
  nuke.setUserPreset("Keyer", "SSS.alpha", {'input': 'SSS', 'operation': 'luminance key', 'range': '0 0.007297795507 1 1', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'output': 'SSS.alpha'})
  nuke.setUserPreset("Keyer", "Emission.alpha", {'input': 'Emission', 'operation': 'luminance key', 'range': '0 0.007297795507 1 1', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'output': 'Emission.alpha'})
  nuke.setUserPreset("Merge2", "DepthMerge", {'Achannels': 'depth', 'output': 'depth', 'operation': 'min', 'Bchannels': 'depth', 'selected': 'true'})
  nuke.setUserPreset("Merge2", "AO", {'screen_alpha': 'true', 'operation': 'multiply', 'selected': 'true', 'label': 'AO'})
  nuke.setUserPreset("Merge2", "LayerCopy", {'Achannels': 'BumpNormals', 'output': '{{Achannels}}', 'operation': 'copy', 'Bchannels': '{{Achannels}}', 'selected': 'true'})
  nuke.setUserPreset("Merge2", "mask_fog", {'Achannels': 'mask_fog', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'output': '{{Achannels}}', 'operation': 'max', 'Bchannels': 'none'})
  nuke.setUserPreset("Merge2", "SSS.alpha", {'indicators': '4', 'operation': 'copy', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'maskChannelInput': 'SSS.alpha'})
  nuke.setUserPreset("Merge2", "VIEWER_INPUT", {'Achannels': 'rgb', 'gl_color': '0xffd83200', 'operation': 'under', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'label': '[knob this.name VIEWER_INPUT]'})
  nuke.setUserPreset("Merge2", "motion", {'Achannels': 'motion', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'gl_color': '0xfffb3200', 'output': 'motion', 'operation': 'copy', 'Bchannels': 'motion'})
  nuke.setUserPreset("ModifyMetaData", "frameRange", {'selected': 'true', 'metadata': '{set first_frame "\\[value input.first]"}\n{set last_frame "\\[value input.last]"}'})
  nuke.setUserPreset("Multiply", "alpha*0", {'channels': 'alpha', 'selected': 'true', 'value': '0'})
  nuke.setUserPreset("Multiply", "depth 1e-4", {'channels': 'depth', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'value': '0.0001'})
  nuke.setUserPreset("NoOp", "", {'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'customPresetName': 'fog'})
  nuke.setUserPreset("Premult", "depth", {'channels': 'depth', 'selected': 'true'})
  nuke.setUserPreset("Radial", "Soft:0.5 Invert", {'softness': '0.5', 'invert': 'true', 'selected': 'true', 'area': '-79.98813498 -174 1999.988135 1254'})
  nuke.setUserPreset("Radial", "Mask", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'premult': 'all', 'area': '480 270 1440 810', 'selected': 'true', 'label': 'Mask', 'output': 'none'})
  nuke.setUserPreset("Radial", "Black_Invert", {'color': '0', 'invert': 'true', 'selected': 'true', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'area': '480 270 1440 810'})
  nuke.setUserPreset("Ramp", "Black", {'color': '0', 'p0': '1358 1076', 'p1': '404 22', 'type': 'smooth1', 'selected': 'true'})
  nuke.setUserPreset("Ramp", "Mask", {'p0': '600 600', 'p1': '1400 600', 'premult': 'all', 'selected': 'true', 'label': 'Mask', 'output': 'none'})
  nuke.setUserPreset("Read", "Write1 HoldFrame", {'last': '{first}', 'selected': 'true', 'file': '[value Write1.file]', 'indicators': '2', 'origset': 'true', 'first': '{parent.Write1.last}'})
  nuke.setUserPreset("Read", "_Write jpg", {'selected': 'true', 'disable': '{"! \\[file exist \\[value this.file]]"}', 'label': '\xe8\xbe\x93\xe5\x87\xba\xe7\x9a\x84\xe5\x8d\x95\xe5\xb8\xa7', 'version': '31', 'file': '[value _Write.Write_JPG_1.file]', 'indicators': '2', 'gl_color': '0xb032ff00', 'origset': 'true'})
  nuke.setUserPreset("Rectangle", "feather", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'premult': 'rgba', 'area': '0 0 {width} {height}', 'selected': 'true', 'output': 'none', 'gl_color': '0x32d5ff00', 'indicators': '2', 'softness': '100'})
  nuke.setUserPreset("RolloffContrast", "a", {'soft_clip': '1.2', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'slope_mag_low1': '0.07999998331', 'slope_mag_high2': '0.07999998331', 'contrast': '1.2', 'center': '0.2'})
  nuke.setUserPreset("Shuffle", "DepthToAlpha", {'selected': 'true', 'out': 'alpha', 'in': 'depth'})
  nuke.setUserPreset("Shuffle", "CH_A", {'selected': 'true', 'green': 'black', 'red': 'alpha', 'out': 'CH_A'})
  nuke.setUserPreset("Shuffle", "Rooftop", {'blue': 'black', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'label': '[value in] [value in2] -> [value out] [value out2]', 'green': 'black', 'in': 'PuzzleMatte3', 'alpha': 'red', 'red': 'black', 'out': 'Rooftop'})
  nuke.setUserPreset("Shuffle", "DeadBody", {'blue': 'black', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'label': '[value in] [value in2] -> [value out] [value out2]', 'green': 'black', 'in': 'PuzzleMatte3', 'alpha': 'red', 'red': 'black', 'out': 'DeadBody'})
  nuke.setUserPreset("Shuffle", "alpha -> mask.a", {'out2': 'rgba', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'selected': 'true', 'in': 'alpha', 'gl_color': '0x8332ff00', 'out': 'mask'})
  nuke.setUserPreset("SoftClip", "Log_min:0", {'conversion': 'logarithmic compress', 'softclip_min': '0', 'selected': 'true'})
  nuke.setUserPreset("Transform", "ToCenter", {'indicators': '2', 'label': 'ToCenter', 'translate': '{width/2-center.x} {height/2-center.y}', 'selected': 'true', 'center': '1002 778'})
  nuke.setUserPreset("TransformGeo", "inputToThis", {'translate': '24.25000191 9.119999886 -3.639999151', 'rotate': '26.93956895 -46.47709455 13.99319297', 'selected': 'true', 'label': '[input this 2 Camera1]'})
  nuke.setUserPreset("TransformGeo", "inputPivot", {'indicators': '2', 'pivot': '{input.translate} {input.translate} {input.translate}', 'selected': 'true', 'rotate': '0 45 0', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91'})
  nuke.setUserPreset("Write", "ScriptName.mov", {'mov.mov32_fps': '{"\\[value root.fps]"}', 'mov.mov64_bitrate': '20000', 'checkHashOnRead': 'false', 'file_type': 'mov', 'beforeRender': 'file = nuke.tcl(\'eval list {\'+nuke.thisNode()["file"].value()+\'}\');\nabsolutePath = os.path.splitdrive(file)[0];\nproject_directory = nuke.tcl(\'eval list {\'+nuke.root()["project_directory"].value()+\'}\');\npathHead = \'\' if absolutePath else project_directory+\'/\';\ntarget = pathHead+os.path.dirname(file)\nif os.path.exists(target):\n    pass;\nelse:\n    os.makedirs(target);\n', 'mov.meta_encoder': 'mov32', 'selected': 'true', 'mov.mov64_codec': 'ap4h', 'mov.mov64_advanced': '1', 'colorspace': 'sRGB', 'mov.mov32_codec': 'raw ', 'mov.meta_codec': 'raw ', 'version': '3', 'proxy': 'mov/[lindex [split [basename [value root.name]] .] 0]_proxy.mov', 'file': 'mov/[lindex [split [basename [value root.name]] .] 0].mov', 'indicators': '2'})
  nuke.setUserPreset("Write", "InputName.jpg", {'checkHashOnRead': 'false', 'file_type': 'jpeg', 'beforeRender': 'file = nuke.tcl(\'eval list {\'+nuke.thisNode()["file"].value()+\'}\');\nabsolutePath = os.path.splitdrive(file)[0];\nproject_directory = nuke.tcl(\'eval list {\'+nuke.root()["project_directory"].value()+\'}\');\npathHead = \'\' if absolutePath else project_directory+\'/\';\ntarget = pathHead+os.path.dirname(file)\nif os.path.exists(target):\n    pass;\nelse:\n    os.makedirs(target);\n', 'selected': 'true', 'jpeg._jpeg_quality': '1', 'version': '3', 'proxy': 'images/[lindex [split [basename [metadata input/filename]] .] 0]_proxy.jpg', 'file': 'images/[lindex [split [basename [metadata input/filename]] .] 0].jpg'})
  nuke.setUserPreset("Write", "ScriptName.jpg_SingleFrame", {'checkHashOnRead': 'false', 'file_type': 'jpeg', 'beforeRender': 'file = nuke.tcl(\'eval list {\'+nuke.thisNode()["file"].value()+\'}\');\nabsolutePath = os.path.splitdrive(file)[0];\nproject_directory = nuke.tcl(\'eval list {\'+nuke.root()["project_directory"].value()+\'}\');\npathHead = \'\' if absolutePath else project_directory+\'/\';\ntarget = pathHead+os.path.dirname(file)\nif os.path.exists(target):\n    pass;\nelse:\n    os.makedirs(target);\n', 'selected': 'true', 'jpeg._jpeg_quality': '1', 'version': '15', 'use_limit': 'true', 'proxy': 'images/[lindex [split [basename [value root.name]] .] 0]_proxy.%04d.jpg', 'file': 'images/[lindex [split [basename [value root.name]] .] 0].%04d.jpg', 'indicators': '2', 'last': '{first}', 'first': '{"\\[value root.first_frame]"}'})
  nuke.setUserPreset("Write", "InputName.####.png", {'last': '8', 'file_type': 'png', 'label': '<font size="3" color =#548DD4><b> Frame range :</b></font> <font color = red>[value first] - [value last] </font>', 'channels': 'rgba', 'version': '6', 'use_limit': 'true', 'proxy': 'images/[lindex [split [basename [metadata input/filename]] .] 0]/[lindex [split [basename [metadata input/filename]] .] 0]_proxy.%04d.png', 'file': 'images/[lindex [split [basename [metadata input/filename]] .] 0]/[lindex [split [basename [metadata input/filename]] .] 0].%04d.png', 'checkHashOnRead': 'false', 'first': '8', 'png.datatype': '16 bit'})
  nuke.setUserPreset("Write", "InputName.mov", {'mov.mov64_bitrate': '20000', 'checkHashOnRead': 'false', 'version': '3', 'file_type': 'mov', 'mov.mov64_fps': '{root.fps}', 'selected': 'true', 'mov.mov64_codec': 'apch', 'mov.meta_codec': 'apch', 'colorspace': 'sRGB', 'proxy': 'mov/proxy/[lindex [split [basename [metadata input/filename]] .] 0].mov', 'file': 'mov/[lindex [split [basename [metadata input/filename]] .] 0].mov', 'beforeRender': 'file = nuke.tcl(\'eval list {\'+nuke.thisNode()["file"].value()+\'}\');\nabsolutePath = os.path.splitdrive(file)[0];\nproject_directory = nuke.tcl(\'eval list {\'+nuke.root()["project_directory"].value()+\'}\');\npathHead = \'\' if absolutePath else project_directory+\'/\';\ntarget = pathHead+os.path.dirname(file)\nif os.path.exists(target):\n    pass;\nelse:\n    os.makedirs(target);\n', 'indicators': '2'})
  nuke.setUserPreset("Write", "ScriptName exr seq", {'file_type': 'exr', 'beforeRender': 'file = nuke.tcl(\'eval list {\'+nuke.thisNode()["file"].value()+\'}\');\nabsolutePath = os.path.splitdrive(file)[0];\nproject_directory = nuke.tcl(\'eval list {\'+nuke.root()["project_directory"].value()+\'}\');\npathHead = \'\' if absolutePath else project_directory+\'/\';\ntarget = pathHead+os.path.dirname(file)\nif os.path.exists(target):\n    pass;\nelse:\n    os.makedirs(target);\n', 'selected': 'true', 'version': '15', 'proxy': 'seq/[lindex [split [basename [value root.name]] .] 0]_proxy.%04d.exr', 'file': 'seq/[lindex [split [basename [value root.name]] .] 0].%04d.exr', 'exr.datatype': '32 bit float'})
  nuke.setUserPreset("Write", "ScriptName.%04d.exr", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'file_type': 'exr', 'selected': 'true', 'version': '2', 'proxy': 'seq/proxy/[lindex [split [basename [value root.name]] .] 0]/[lindex [split [basename [value root.name]] .] 0].%04d.exr', 'file': 'seq/[lindex [split [basename [value root.name]] .] 0]/[lindex [split [basename [value root.name]] .] 0].%04d.exr', 'gl_color': '0xff328e00'})
  nuke.setUserPreset("Write", "scriptName.%04d.exr precomp", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'file_type': 'exr', 'selected': 'true', 'label': "[knob file precomp/[python os.path.basename(nuke.scriptName()).rstrip('.nk')]/[python os.path.basename(nuke.thisParent().name()).rstrip('.nk')].%04d.exr]\n[knob proxy precomp/proxy/[python os.path.basename(nuke.scriptName()).rstrip('.nk')]/[python os.path.basename(nuke.thisParent().name()).rstrip('.nk')].%04d.exr]", 'version': '2', 'proxy': 'precomp/proxy/XJ_EP01_01_sc002_v10.deep_fx/XJ_EP01_01_sc002_v10.deep_fx.%04d.exr', 'file': 'precomp/XJ_EP01_01_sc002_v10.deep_fx/XJ_EP01_01_sc002_v10.deep_fx.%04d.exr', 'gl_color': '0xff328e00'})
  nuke.setUserPreset("Write", "scriptName.%04d.exr", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'file_type': 'exr', 'selected': 'true', 'version': '2', 'proxy': "precomp/proxy/[python os.path.basename(nuke.scriptName()).rstrip('.nk')]/[python os.path.basename(nuke.thisParent().name()).rstrip('.nk')].%04d.exr", 'file': "precomp/[python os.path.basename(nuke.scriptName()).rstrip('.nk')]/[python os.path.basename(nuke.thisParent().name()).rstrip('.nk')].%04d.exr", 'gl_color': '0xff328e00'})
  nuke.setUserPreset("ZDefocus2", "math:depth", {'center': '0.0009904684266', 'dof': '0.200000003', 'focal_point': '882 569', 'legacy_resize_mode': 'false', 'math': 'depth', 'show_legacy_resize_mode': 'false', 'max_size': '20', 'size': '12.5'})
  nuke.setUserPreset("ZDefocus2", "math:depth CloseRange", {'center': '0.0010277119', 'selected': 'true', 'focal_point': '978 664', 'legacy_resize_mode': 'false', 'math': 'depth', 'show_legacy_resize_mode': 'false', 'max_size': '50', 'size': '25'})
  nuke.setUserPreset("ZDefocus2", "a", {'center': '0.002943731844', 'selected': 'true', 'focal_point': '1279 370', 'legacy_resize_mode': 'false', 'show_legacy_resize_mode': 'false', 'math': 'depth', 'size': '25'})
